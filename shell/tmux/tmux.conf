# Tmux ---------------------------------------------------------------------{{{

# 这是一份无插件tmux简易配置，键位与vimrc类似，shell是zsh

# <prefix>是<Ctrl><Space>
#
# 新建标签页                        <prefix>t
# 新建标签页（当前路径）            <prefix>.
# 分割窗口（水平/竖直）             <prefix>s [h/j/k/l]
# 调整窗口大小                      <prefix> [Up/Down/Left/Right]
# 选择窗口                          <prefix>w [h/j/k/l]
# 复制粘贴（tmux）                  <prefix>[ -> v -> y -> <prefix>= -> <prefix>]
# 复制粘贴（系统）                  <Shift>+mouse, <Ctrl><Shift>c, <Ctrl><Shift>v

# source-file /path/to/tmux.conf

# --------------------------------------------------------------------------}}}

# prefix -------------------------------------------------------------------{{{

# Prefix is Ctrl-Space              conflict with zh/en switch
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Prefix is Ctrl-\
#unbind C-b
#set -g prefix C-\\
#bind C-\\ send-prefix

# tmux new -t <session name>        to name session
# <C-Space>d                        to detach session
# tmux ls                           to list session
# tmux attach -t <session name>     to attach session
# ls /tmp | grep tmux               to list tmux socket
# tmux -L <socket name>             to load socket

# --------------------------------------------------------------------------}}}

# env ----------------------------------------------------------------------{{{

# Use vim keybindings
set -g mode-keys vi

# Shell
set -g default-shell /bin/zsh

# Terminal
set -g default-terminal "tmux"
#set -g default-terminal "screen-256color"
# tell Tmux that outside terminal supports true color
#set -g terminal-overrides "screen-256color"
set -ga terminal-overrides "xterm-256color"

# Speed up tmux
set -g escape-time 10

# Start index of window/pane with 1
set -g base-index 1
setw -g pane-base-index 1

# Update files on focus (using for vim)
set -g focus-events on

# Enable mouse mode (tmux 2.1 and above)
set -g mouse on

# --------------------------------------------------------------------------}}}

# Tab/Window ---------------------------------------------------------------{{{

# New Tab/Window
bind t new-window
# New Tab/Window (keep current path)
# prefix-. (new tab as vim Space-Tab-.)
bind . new-window -c "#{pane_current_path}"

# Select Tab/Windows
# prefix-<number> (select tab as vim Space-Tab-<number>)

# --------------------------------------------------------------------------}}}

# Split panes --------------------------------------------------------------{{{

unbind '"'
unbind %
unbind s
# custom key table
# prefix-s-<hjkl> (as vim Space-s-<hjkl>)
bind s switch-client -T split-key-table
# split left (as vim Space-s-l)
bind -T split-key-table l split-window -h -c '#{pane_current_path}'
bind -T split-key-table h split-window -h -c '#{pane_current_path}'
# split up (as vim Space-s-j)
bind -T split-key-table j split-window -v -c '#{pane_current_path}'
bind -T split-key-table k split-window -v -c '#{pane_current_path}'

# --------------------------------------------------------------------------}}}

# Resize pane --------------------------------------------------------------{{{

unbind C-Up
unbind C-Down
unbind C-Left
unbind C-Right
unbind Up
unbind Down
unbind Left
unbind Right
# prefix-<Up/Down/Left/Right>
bind Up resize-pane -U 2
bind Down resize-pane -D 2
bind Left resize-pane -L 5
bind Right resize-pane -R 5
setw -g aggressive-resize on

# --------------------------------------------------------------------------}}}

# Moving between panes -----------------------------------------------------{{{

unbind w
# prefix-w-<hjkl> (as vim Ctrl-w-hjkl)
bind w switch-client -T move-key-table
bind -T move-key-table h select-pane -L
bind -T move-key-table j select-pane -D
bind -T move-key-table k select-pane -U
bind -T move-key-table l select-pane -R

# --------------------------------------------------------------------------}}}

# Copy ---------------------------------------------------------------------{{{

# prefix-= list copy buffers, Enter select and insert
# Shift-Mouse select, Ctrl-Shift-c copy, Ctrl-Shift-v paste
# prefix-[/Esc copy mode, v/V-hjkl select, y copy, prefix-]/p paste
set -g set-clipboard off
#unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "pbcopy"
unbind -T copy-mode-vi Space
bind-key -T copy-mode-vi Space send -X jump-again
bind-key -T copy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | pbcopy '
bind C-y run 'tmux save-buffer - | pbcopy '

# Ctrl-C/V (error)
#unbind c
## custom key table
## prefix-c-<c/v> (as vim Space-c-*)
#bind c  switch-client -T copy-key-table
## Ctrl-C
## prefix-c-c (as vim Space-c-c)
#bind -T copy-key-table c run "tmux save-buffer - | xclip -i -sel clipboard"
## Ctrl-v
## prefix-c-v (as vim Space-c-v)
#bind -T copy-key-table v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# --------------------------------------------------------------------------}}}

# Statusline ---------------------------------------------------------------{{{

# show/hide statusline
# colors: black, red, green, yellow, blue, magenta, cyan white
# brightcolors: bright*
# 256-colors: colour0, colour255
# #S Name of session
# #H/#h Hostname of local host
# #P Index of pane
# #T Title of pane
# #I Index of window
# #W window_name
# #F Window flags * - #
bind h set-option status
setw -g monitor-activity on
set -g visual-activity on
set -g status-interval 5
set -g status-justify left
#set -g window-style "fg=white" # bg=black  # default
set -g status-style "bg=black, fg=white"
set -g message-style "bg=white, fg=red"
set -g display-time 2000
set -g set-titles on
set -g set-titles-string "#W"
set -g status-left "[#S] "
set -g status-right "[%H:%M %y-%m-%d] [#(cat /proc/loadavg | cut -f 1-3 -d ' ')] [#H]"
set -g status-left-length 10
set -g status-right-length 50
set -wg window-status-format "[#I] [#W][#F]"
set -wg window-status-current-format "[#I] [#W][#F]"
set -wg window-status-separator "  "
set -wg window-status-current-style "bg=blue"
set -wg window-status-last-style "fg=blue"

# --------------------------------------------------------------------------}}}

# List of plugins ----------------------------------------------------------{{{

## prefix-I (install)
## prefix-U (update)
## prefix-Alt-u (uninstall)
##set -g @plugin 'tmux-plugins/tpm'
##set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'dracula/tmux'
#
#
#
## available plugins: battery, cpu-usage, gpu-usage, ram-usage, network,
## network-bandwith, network-ping, weather, time
#set -g @dracula-plugins "git cpu-usage ram-usage time"
##set -g @dracula-plugins " "
#
## available colors: white, gray, dark_gray, light_purple, dark_purple, cyan, green, orange, red, pink, yellow
##set -g@dracula-[plugin-name]-colors "[bg][fg]"
##set -g@dracula-cpu-usage-colors "pink dark_gray"
#
## Adjust the refresh rate of statusbar  default 5
#set -g @dracula-refresh-rate 5
#set -g @dracula-border-contrast true
#set -g @dracula-show-flags true
#set -g @dracula-show-powerline true
## it can accept `session`, `smiley`, `window`, or any character.
#set -g @dracula-show-left-icon session
#
## Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
##run '~/.tmux/plugins/tpm/tpm'
##run '/usr/share/tmux-plugin-manager/tpm'

# --------------------------------------------------------------------------}}}
